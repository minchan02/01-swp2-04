import pickle #전체적인 예외처리 부탁드립니다.

dbfilename = 'test3_4.dat'

def readScoreDB():
    try:
        fH = open(dbfilename, 'rb')
    except FileNotFoundError as e:
        print("New DB: ", dbfilename)
        return []

    scdb = []
    try:
        scdb =  pickle.load(fH)
    except:
        print("Empty DB: ", dbfilename)
    else:
        print("Open DB: ", dbfilename)
    fH.close()
    return scdb


# write the data into person db
def writeScoreDB(scdb):
    fH = open(dbfilename, 'wb')
    pickle.dump(scdb, fH)
    fH.close()


def doScoreDB(scdb):
    while(True):
        inputstr = (input("Score DB > "))
        if inputstr == "": continue
        parse = inputstr.split(" ")
        if parse[0] == 'add':
            record = {'Name':parse[1], 'Age':parse[2], 'Score':parse[3]}
            scdb += [record]
        elif parse[0] == 'del': 
            for p in scdb:
                if p['Name'] == parse[1]:
                    scdb.remove(p)    
        elif parse[0] == 'show':
            sortKey = 'Name' if len(parse) == 1 else parse[1]
            showScoreDB(scdb, sortKey)
        elif parse[0] == 'find':
            for p in scdb:
                if p['Name'] == parse[1]:
                    for attr in sorted(p): #show와 find의 출력 부분이 유사해서 따로 함수로 빼면 이후 유지보수 시 좋을 것 같습니다.
                        print(attr + "=" + str(p[attr]), end=' ')
                    print()
        elif parse[0] == 'inc':
            for p in scdb:
                if p['Name'] == parse[1]:
                    for attr in sorted(p):
                        if attr == 'Score':
                            p[attr] = int(p[attr])+ int(parse[2])

        elif parse[0] == 'quit':
            break
        else:
            print("Invalid command: " + parse[0])


def showScoreDB(scdb, keyname):
    for p in sorted(scdb, key=lambda person: person[keyname]):
        for attr in sorted(p):
            print(attr + "=" + str(p[attr]), end=' ')
        print()
"""        
2021-02-sw2-01-ozloz8/assignment3_20212971.py

Line 38 in d7b7be2

 elif parse[0] == 'del': 
모든 Name을 제거하지 못합니다.

add Kim 1 11
add Kim 11 111
add Kim 1111 1111

del Kim

show
"""
